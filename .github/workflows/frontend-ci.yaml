name: Frontend Continuous Integration

on:
  pull_request:
    branches:
    - main
    paths:
    - 'starter/frontend/**'
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Run lint
      run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test -- --watchAll=false

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Build application
      run: npm run build

    - name: Build from Docker
      run: docker build -t mp-frontend:latest .
      working-directory: ./starter/frontend
